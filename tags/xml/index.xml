<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xml on /home/yorodm</title>
    <link>https://yorodm.is-a.dev/tags/xml/</link>
    <description>Recent content in xml on /home/yorodm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 02 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://yorodm.is-a.dev/tags/xml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parser SAX en Golang</title>
      <link>https://yorodm.is-a.dev/blog/golang-xml-sax/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://yorodm.is-a.dev/blog/golang-xml-sax/</guid>
      <description>Parser tipo SAX para Golang El problema Tratando de migrar unas cosas del trabajo a Go me tropecé con la necesidad de procesar unos archivos XML (cada día doy más gracias por TOML y JSON) de tamaño considerable.
Una mirada por encima a encoding/xml me dejo bien claro que no existía un parser tipo xml.dom.minidom (el de la biblioteca estándar de Python) o algo como Expat. Las principales funciones (ej. las que salen en los ejemplos) están orientadas más hacia la serialización y deserialización de XML que a andar recorriendo documentos.</description>
    </item>
    
  </channel>
</rss>
